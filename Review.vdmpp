class Review

types
    public String = seq1 of char;
    public Date :: year : nat1
								   month: nat1
								   day : nat1
	inv d == 
		if d.year mod 400 = 0 or (d.year mod 100 <> 0 and d.year mod 4 <> 0)
		   then d.month < 12 and d.day <= [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31](d.month)
     else d.month < 12 and d.day <= [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31](d.month);
    

instance variables
   public user: User;
   public content: String;
   public rating: nat1;
   reviewDate: Date;
   
   
operations

 --Review constructor, initializes the review variables.
  public Review: User * String * nat1 * Date  ==> Review
  	Review(userR,contentR,ratingR,rDate) == (
  	 user := userR;
  	 content := contentR;
  	 rating := ratingR;
  	 reviewDate := rDate;
  	 
  	 );
  	 
 	--Returns the user that posted the review
  pure public getUser: () ==> User
		getUser() ==
		return user;
	 
 	--Returns the content of the review
  pure public getContent: () ==> String
		getContent() ==
		return content;
	 
 	--Returns rating of review
  pure public getRating: () ==> nat1
		getRating() ==
		return rating;
		
	-- Returns review Date
  pure public getReviewDate: () ==> Date
    getReviewDate()  ==
		return reviewDate;
			
  	 
functions
-- TODO Define functiones here

end Review